//
// Account.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct Account: Codable { 


    /** The storage quota for a group in the account in megabytes, if not otherwise specified */
    public var defaultGroupStorageQuotaMb: Int?
    /** The storage quota for the account in megabytes, if not otherwise specified */
    public var defaultStorageQuotaMb: Int?
    /** The default time zone of the account. Allowed time zones are {http://www.iana.org/time-zones IANA time zones} or friendlier {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}. */
    public var defaultTimeZone: String?
    /** The storage quota for a user in the account in megabytes, if not otherwise specified */
    public var defaultUserStorageQuotaMb: Int?
    /** the ID of the Account object */
    public var id: Int?
    /** The account&#39;s identifier in the Student Information System. Only included if the user has permission to view SIS information. */
    public var integrationId: String?
    /** The account&#39;s identifier that is sent as context_id in LTI launches. */
    public var ltiGuid: String?
    /** The display name of the account */
    public var name: String?
    /** The account&#39;s parent ID, or null if this is the root account */
    public var parentAccountId: Int?
    /** The ID of the root account, or null if this is the root account */
    public var rootAccountId: Int?
    /** The account&#39;s identifier in the Student Information System. Only included if the user has permission to view SIS information. */
    public var sisAccountId: String?
    /** The id of the SIS import if created through SIS. Only included if the user has permission to manage SIS information. */
    public var sisImportId: Int?
    /** The UUID of the account */
    public var uuid: String?
    /** The state of the account. Can be &#39;active&#39; or &#39;deleted&#39;. */
    public var workflowState: String?

    public init(defaultGroupStorageQuotaMb: Int?, defaultStorageQuotaMb: Int?, defaultTimeZone: String?, defaultUserStorageQuotaMb: Int?, id: Int?, integrationId: String?, ltiGuid: String?, name: String?, parentAccountId: Int?, rootAccountId: Int?, sisAccountId: String?, sisImportId: Int?, uuid: String?, workflowState: String?) {
        self.defaultGroupStorageQuotaMb = defaultGroupStorageQuotaMb
        self.defaultStorageQuotaMb = defaultStorageQuotaMb
        self.defaultTimeZone = defaultTimeZone
        self.defaultUserStorageQuotaMb = defaultUserStorageQuotaMb
        self.id = id
        self.integrationId = integrationId
        self.ltiGuid = ltiGuid
        self.name = name
        self.parentAccountId = parentAccountId
        self.rootAccountId = rootAccountId
        self.sisAccountId = sisAccountId
        self.sisImportId = sisImportId
        self.uuid = uuid
        self.workflowState = workflowState
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case defaultGroupStorageQuotaMb = "default_group_storage_quota_mb"
        case defaultStorageQuotaMb = "default_storage_quota_mb"
        case defaultTimeZone = "default_time_zone"
        case defaultUserStorageQuotaMb = "default_user_storage_quota_mb"
        case id
        case integrationId = "integration_id"
        case ltiGuid = "lti_guid"
        case name
        case parentAccountId = "parent_account_id"
        case rootAccountId = "root_account_id"
        case sisAccountId = "sis_account_id"
        case sisImportId = "sis_import_id"
        case uuid
        case workflowState = "workflow_state"
    }

}
