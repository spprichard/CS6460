{
  "swagger": "2.0",
  "info": {
    "title": "canvas.instructure.com",
    "version": "1.0"
  },
  "host": "canvas.instructure.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/accounts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Array of additional information to include.\n\n\"lti_guid\":: the 'tool_consumer_instance_guid' that will be sent for this account on LTI launches\n\"registration_settings\":: returns info about the privacy policy and terms of use\n\"services\":: returns services and whether they are enabled (requires account management permissions)",
            "enum": [
              "lti_guid",
              "registration_settings",
              "services"
            ],
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "items": {
                "$ref": "#/definitions/Account"
              },
              "type": "array"
            }
          }
        },
        "description": "A paginated list of accounts that the current user can view or manage.\nTypically, students and even teachers will get an empty list in response,\nonly account admins can view the accounts that they are in.",
        "operationId": "list_accounts",
        "summary": "List accounts"
      }
    },
    "/v1/accounts/{account_id}/courses": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "If true, include only courses with at least one enrollment.  If false,\ninclude only courses with no enrollments.  If not present, do not filter\non course enrollment status.",
            "in": "query",
            "name": "with_enrollments",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If set, only return courses that have at least one user enrolled in\nin the course with one of the specified enrollment types.",
            "enum": [
              "teacher",
              "student",
              "ta",
              "observer",
              "designer"
            ],
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "enrollment_type",
            "required": false,
            "type": "array"
          },
          {
            "description": "If true, include only published courses.  If false, exclude published\ncourses.  If not present, do not filter on published status.",
            "in": "query",
            "name": "published",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If true, include only completed courses (these may be in state\n'completed', or their enrollment term may have ended).  If false, exclude\ncompleted courses.  If not present, do not filter on completed status.",
            "in": "query",
            "name": "completed",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If true, include only blueprint courses. If false, exclude them.\nIf not present, do not filter on this basis.",
            "in": "query",
            "name": "blueprint",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If true, include only courses that inherit content from a blueprint course.\nIf false, exclude them. If not present, do not filter on this basis.",
            "in": "query",
            "name": "blueprint_associated",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "List of User IDs of teachers; if supplied, include only courses taught by\none of the referenced users.",
            "format": "int64",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "by_teachers",
            "required": false,
            "type": "array"
          },
          {
            "description": "List of Account IDs; if supplied, include only courses associated with one\nof the referenced subaccounts.",
            "format": "int64",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "by_subaccounts",
            "required": false,
            "type": "array"
          },
          {
            "description": "If present, only return courses that have at least one enrollment.\nEquivalent to 'with_enrollments=true'; retained for compatibility.",
            "in": "query",
            "name": "hide_enrollmentless_courses",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If set, only return courses that are in the given state(s). By default,\nall states but \"deleted\" are returned.",
            "enum": [
              "created",
              "claimed",
              "available",
              "completed",
              "deleted",
              "all"
            ],
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "state",
            "required": false,
            "type": "array"
          },
          {
            "description": "If set, only includes courses from the specified term.",
            "format": "int64",
            "in": "query",
            "name": "enrollment_term_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The partial course name, code, or full ID to match and return in the results list. Must be at least 3 characters.",
            "in": "query",
            "name": "search_term",
            "required": false,
            "type": "string"
          },
          {
            "description": "- All explanations can be seen in the {api:CoursesController#index Course API index documentation}\n- \"sections\", \"needs_grading_count\" and \"total_scores\" are not valid options at the account level",
            "enum": [
              "syllabus_body",
              "term",
              "course_progress",
              "storage_quota_used_mb",
              "total_students",
              "teachers"
            ],
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "include",
            "required": false,
            "type": "array"
          },
          {
            "description": "The column to sort results by.",
            "enum": [
              "course_name",
              "sis_course_id",
              "teacher",
              "subaccount",
              "total_students"
            ],
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "The order to sort the given column by.",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "The filter to search by. \"course\" searches for course names, course codes,\nand SIS IDs. \"teacher\" searches for teacher names",
            "enum": [
              "course",
              "teacher"
            ],
            "in": "query",
            "name": "search_by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "items": {
                "$ref": "#/definitions/Course"
              },
              "type": "array"
            }
          }
        },
        "description": "Retrieve a paginated list of courses in this account.",
        "operationId": "list_active_courses_in_account",
        "summary": "List active courses in an account"
      }
    },
    "/v1/accounts/{account_id}/sub_accounts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "If true, the entire account tree underneath\nthis account will be returned (though still paginated). If false, only\ndirect sub-accounts of this account will be returned. Defaults to false.",
            "in": "query",
            "name": "recursive",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "items": {
                "$ref": "#/definitions/Account"
              },
              "type": "array"
            }
          }
        },
        "description": "List accounts that are sub-accounts of the given account.",
        "operationId": "get_sub_accounts_of_account",
        "summary": "Get the sub-accounts of an account"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the new sub-account.",
            "in": "formData",
            "name": "account[name]",
            "required": true,
            "type": "string"
          },
          {
            "description": "The account's identifier in the Student Information System.",
            "in": "formData",
            "name": "account[sis_account_id]",
            "required": false,
            "type": "string"
          },
          {
            "description": "The default course storage quota to be used, if not otherwise specified.",
            "format": "int64",
            "in": "formData",
            "name": "account[default_storage_quota_mb]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The default user storage quota to be used, if not otherwise specified.",
            "format": "int64",
            "in": "formData",
            "name": "account[default_user_storage_quota_mb]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The default group storage quota to be used, if not otherwise specified.",
            "format": "int64",
            "in": "formData",
            "name": "account[default_group_storage_quota_mb]",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "description": "Add a new sub-account to a given account.",
        "operationId": "create_new_sub_account",
        "summary": "Create a new sub-account"
      }
    },
    "/v1/accounts/{account_id}/sub_accounts/{id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "description": "Cannot delete an account with active courses or active sub_accounts.\nCannot delete a root_account",
        "operationId": "delete_sub_account",
        "summary": "Delete a sub-account"
      }
    },
    "/v1/accounts/{account_id}/terms_of_service": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/TermsOfService"
            }
          }
        },
        "operationId": "returns_terms_of_service_for_that_account",
        "summary": "Returns the terms of service for that account"
      }
    },
    "/v1/accounts/{account_id}/users/{user_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ID",
            "in": "path",
            "name": "account_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "description": "Delete a user record from a Canvas root account. If a user is associated\nwith multiple root accounts (in a multi-tenant instance of Canvas), this\naction will NOT remove them from the other accounts.\n\nWARNING: This API will allow a user to remove themselves from the account.\nIf they do this, they won't be able to make API calls or log into Canvas at\nthat account.",
        "operationId": "delete_user_from_root_account",
        "summary": "Delete a user from the root account"
      }
    },
    "/v1/accounts/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "description": "Retrieve information on an individual account, given by id or sis\nsis_account_id.",
        "operationId": "get_single_account",
        "summary": "Get a single account"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Updates the account name",
            "in": "formData",
            "name": "account[name]",
            "required": false,
            "type": "string"
          },
          {
            "description": "Updates the account sis_account_id\nMust have manage_sis permission and must not be a root_account.",
            "in": "formData",
            "name": "account[sis_account_id]",
            "required": false,
            "type": "string"
          },
          {
            "description": "The default time zone of the account. Allowed time zones are\n{http://www.iana.org/time-zones IANA time zones} or friendlier\n{http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.",
            "in": "formData",
            "name": "account[default_time_zone]",
            "required": false,
            "type": "string"
          },
          {
            "description": "The default course storage quota to be used, if not otherwise specified.",
            "format": "int64",
            "in": "formData",
            "name": "account[default_storage_quota_mb]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The default user storage quota to be used, if not otherwise specified.",
            "format": "int64",
            "in": "formData",
            "name": "account[default_user_storage_quota_mb]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The default group storage quota to be used, if not otherwise specified.",
            "format": "int64",
            "in": "formData",
            "name": "account[default_group_storage_quota_mb]",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Restrict students from viewing courses after end date",
            "in": "formData",
            "name": "account[settings][restrict_student_past_view][value]",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Lock this setting for sub-accounts and courses",
            "in": "formData",
            "name": "account[settings][restrict_student_past_view][locked]",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Restrict students from viewing courses before start date",
            "in": "formData",
            "name": "account[settings][restrict_student_future_view][value]",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Lock this setting for sub-accounts and courses",
            "in": "formData",
            "name": "account[settings][restrict_student_future_view][locked]",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Disable comments on announcements",
            "in": "formData",
            "name": "account[settings][lock_all_announcements][value]",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Lock this setting for sub-accounts and courses",
            "in": "formData",
            "name": "account[settings][lock_all_announcements][locked]",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Restrict students from viewing future enrollments in course list",
            "in": "formData",
            "name": "account[settings][restrict_student_future_listing][value]",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Lock this setting for sub-accounts and courses",
            "in": "formData",
            "name": "account[settings][restrict_student_future_listing][locked]",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Give this a set of keys and boolean values to enable or disable services matching the keys",
            "in": "formData",
            "name": "account[services]",
            "required": false,
            "type": "Hash"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "description": "Update an existing account.",
        "operationId": "update_account",
        "summary": "Update an account"
      }
    },
    "/v1/course_accounts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "items": {
                "$ref": "#/definitions/Account"
              },
              "type": "array"
            }
          }
        },
        "description": "A paginated list of accounts that the current user can view through their\nadmin course enrollments. (Teacher, TA, or designer enrollments).\nOnly returns \"id\", \"name\", \"workflow_state\", \"root_account_id\" and \"parent_account_id\"",
        "operationId": "list_accounts_for_course_admins",
        "summary": "List accounts for course admins"
      }
    }
  },
  "definitions": {
    "Account": {
      "properties": {
        "default_group_storage_quota_mb": {
          "description": "The storage quota for a group in the account in megabytes, if not otherwise specified",
          "example": 50,
          "type": "integer"
        },
        "default_storage_quota_mb": {
          "description": "The storage quota for the account in megabytes, if not otherwise specified",
          "example": 500,
          "type": "integer"
        },
        "default_time_zone": {
          "description": "The default time zone of the account. Allowed time zones are {http://www.iana.org/time-zones IANA time zones} or friendlier {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.",
          "example": "America/Denver",
          "type": "string"
        },
        "default_user_storage_quota_mb": {
          "description": "The storage quota for a user in the account in megabytes, if not otherwise specified",
          "example": 50,
          "type": "integer"
        },
        "id": {
          "description": "the ID of the Account object",
          "example": 2,
          "type": "integer"
        },
        "integration_id": {
          "description": "The account's identifier in the Student Information System. Only included if the user has permission to view SIS information.",
          "example": "123xyz",
          "type": "string"
        },
        "lti_guid": {
          "description": "The account's identifier that is sent as context_id in LTI launches.",
          "example": "123xyz",
          "type": "string"
        },
        "name": {
          "description": "The display name of the account",
          "example": "Canvas Account",
          "type": "string"
        },
        "parent_account_id": {
          "description": "The account's parent ID, or null if this is the root account",
          "example": 1,
          "type": "integer"
        },
        "root_account_id": {
          "description": "The ID of the root account, or null if this is the root account",
          "example": 1,
          "type": "integer"
        },
        "sis_account_id": {
          "description": "The account's identifier in the Student Information System. Only included if the user has permission to view SIS information.",
          "example": "123xyz",
          "type": "string"
        },
        "sis_import_id": {
          "description": "The id of the SIS import if created through SIS. Only included if the user has permission to manage SIS information.",
          "example": "12",
          "type": "integer"
        },
        "uuid": {
          "description": "The UUID of the account",
          "example": "WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5",
          "type": "string"
        },
        "workflow_state": {
          "description": "The state of the account. Can be 'active' or 'deleted'.",
          "example": "active",
          "type": "string"
        }
      }
    }
  }
}
